<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sfos.oauth.mapper.RoleEntityMapper">
  <resultMap id="BaseResultMap" type="com.sfos.oauth.model.RoleEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="last_modified" jdbcType="TIMESTAMP" property="lastModified" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sort_priority" jdbcType="INTEGER" property="sortPriority" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, date_created, last_modified, record_status, remarks, sort_priority, version, 
    role_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_entity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role_entity
    where role_name = #{roleName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role_entity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sfos.oauth.model.RoleEntity">
    insert into role_entity (id, date_created, last_modified, 
      record_status, remarks, sort_priority, 
      version, role_name)
    values (#{id,jdbcType=BIGINT}, #{dateCreated,jdbcType=TIMESTAMP}, #{lastModified,jdbcType=TIMESTAMP}, 
      #{recordStatus,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{sortPriority,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sfos.oauth.model.RoleEntity">
    insert into role_entity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sortPriority != null">
        sort_priority,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sfos.oauth.model.RoleEntity">
    update role_entity
    <set>
      <if test="dateCreated != null">
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        sort_priority = #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sfos.oauth.model.RoleEntity">
    update role_entity
    set date_created = #{dateCreated,jdbcType=TIMESTAMP},
      last_modified = #{lastModified,jdbcType=TIMESTAMP},
      record_status = #{recordStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort_priority = #{sortPriority,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.sfos.oauth.model.RoleEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="last_modified" jdbcType="TIMESTAMP" property="lastModified" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sort_priority" jdbcType="INTEGER" property="sortPriority" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, date_created, last_modified, record_status, remarks, sort_priority, version, 
    role_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_entity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role_entity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sfos.oauth.model.RoleEntity">
    insert into role_entity (id, date_created, last_modified, 
      record_status, remarks, sort_priority, 
      version, role_name)
    values (#{id,jdbcType=BIGINT}, #{dateCreated,jdbcType=TIMESTAMP}, #{lastModified,jdbcType=TIMESTAMP}, 
      #{recordStatus,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{sortPriority,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sfos.oauth.model.RoleEntity">
    insert into role_entity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sortPriority != null">
        sort_priority,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sfos.oauth.model.RoleEntity">
    update role_entity
    <set>
      <if test="dateCreated != null">
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        sort_priority = #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sfos.oauth.model.RoleEntity">
    update role_entity
    set date_created = #{dateCreated,jdbcType=TIMESTAMP},
      last_modified = #{lastModified,jdbcType=TIMESTAMP},
      record_status = #{recordStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort_priority = #{sortPriority,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.sfos.auth.model.RoleEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="last_modified" jdbcType="TIMESTAMP" property="lastModified" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sort_priority" jdbcType="INTEGER" property="sortPriority" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, date_created, last_modified, record_status, remarks, sort_priority, version, 
    role_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_entity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role_entity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sfos.auth.model.RoleEntity">
    insert into role_entity (id, date_created, last_modified, 
      record_status, remarks, sort_priority, 
      version, role_name)
    values (#{id,jdbcType=BIGINT}, #{dateCreated,jdbcType=TIMESTAMP}, #{lastModified,jdbcType=TIMESTAMP}, 
      #{recordStatus,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{sortPriority,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sfos.auth.model.RoleEntity">
    insert into role_entity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sortPriority != null">
        sort_priority,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sfos.auth.model.RoleEntity">
    update role_entity
    <set>
      <if test="dateCreated != null">
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        sort_priority = #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sfos.auth.model.RoleEntity">
    update role_entity
    set date_created = #{dateCreated,jdbcType=TIMESTAMP},
      last_modified = #{lastModified,jdbcType=TIMESTAMP},
      record_status = #{recordStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort_priority = #{sortPriority,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>