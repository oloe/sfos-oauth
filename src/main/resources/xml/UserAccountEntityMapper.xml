<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sfos.oauth.mapper.UserAccountEntityMapper">
  <resultMap id="BaseResultMap" type="com.sfos.oauth.model.UserAccountEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="last_modified" jdbcType="TIMESTAMP" property="lastModified" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sort_priority" jdbcType="INTEGER" property="sortPriority" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="account_open_code" jdbcType="VARCHAR" property="accountOpenCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="failure_count" jdbcType="INTEGER" property="failureCount" />
    <result column="failure_time" jdbcType="TIMESTAMP" property="failureTime" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Base_Column_List">
    id, date_created, last_modified, record_status, remarks, sort_priority, version, 
    account_open_code, address, avatar_url, birthday, city, email, failure_count, failure_time, 
    gender, mobile, nick_name, password, province, username
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sfos.oauth.model.UserAccountEntity">
    insert into user_account_entity (id, date_created, last_modified, 
      record_status, remarks, sort_priority, 
      version, account_open_code, address, 
      avatar_url, birthday, city, 
      email, failure_count, failure_time, 
      gender, mobile, nick_name, 
      password, province, username
      )
    values (#{id,jdbcType=BIGINT}, #{dateCreated,jdbcType=TIMESTAMP}, #{lastModified,jdbcType=TIMESTAMP}, 
      #{recordStatus,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{sortPriority,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{accountOpenCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{city,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{failureCount,jdbcType=INTEGER}, #{failureTime,jdbcType=TIMESTAMP}, 
      #{gender,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sfos.oauth.model.UserAccountEntity">
    insert into user_account_entity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sortPriority != null">
        sort_priority,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="accountOpenCode != null">
        account_open_code,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="failureCount != null">
        failure_count,
      </if>
      <if test="failureTime != null">
        failure_time,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="accountOpenCode != null">
        #{accountOpenCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="failureCount != null">
        #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="failureTime != null">
        #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sfos.oauth.model.UserAccountEntity">
    update user_account_entity
    <set>
      <if test="dateCreated != null">
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        sort_priority = #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="accountOpenCode != null">
        account_open_code = #{accountOpenCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="failureCount != null">
        failure_count = #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="failureTime != null">
        failure_time = #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sfos.oauth.model.UserAccountEntity">
    update user_account_entity
    set date_created = #{dateCreated,jdbcType=TIMESTAMP},
      last_modified = #{lastModified,jdbcType=TIMESTAMP},
      record_status = #{recordStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort_priority = #{sortPriority,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      account_open_code = #{accountOpenCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      city = #{city,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      failure_count = #{failureCount,jdbcType=INTEGER},
      failure_time = #{failureTime,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.sfos.oauth.model.UserAccountEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="last_modified" jdbcType="TIMESTAMP" property="lastModified" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sort_priority" jdbcType="INTEGER" property="sortPriority" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="account_open_code" jdbcType="VARCHAR" property="accountOpenCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="failure_count" jdbcType="INTEGER" property="failureCount" />
    <result column="failure_time" jdbcType="TIMESTAMP" property="failureTime" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Base_Column_List">
    id, date_created, last_modified, record_status, remarks, sort_priority, version, 
    account_open_code, address, avatar_url, birthday, city, email, failure_count, failure_time, 
    gender, mobile, nick_name, password, province, username
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_account_entity
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="checkByUsername" parameterType="java.lang.String" resultMap="java.lang.Boolean">
    select
    count(1)
    from user_account_entity
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sfos.oauth.model.UserAccountEntity">
    insert into user_account_entity (id, date_created, last_modified, 
      record_status, remarks, sort_priority, 
      version, account_open_code, address, 
      avatar_url, birthday, city, 
      email, failure_count, failure_time, 
      gender, mobile, nick_name, 
      password, province, username
      )
    values (#{id,jdbcType=BIGINT}, #{dateCreated,jdbcType=TIMESTAMP}, #{lastModified,jdbcType=TIMESTAMP}, 
      #{recordStatus,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{sortPriority,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{accountOpenCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{city,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{failureCount,jdbcType=INTEGER}, #{failureTime,jdbcType=TIMESTAMP}, 
      #{gender,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sfos.oauth.model.UserAccountEntity">
    insert into user_account_entity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sortPriority != null">
        sort_priority,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="accountOpenCode != null">
        account_open_code,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="failureCount != null">
        failure_count,
      </if>
      <if test="failureTime != null">
        failure_time,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="accountOpenCode != null">
        #{accountOpenCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="failureCount != null">
        #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="failureTime != null">
        #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sfos.oauth.model.UserAccountEntity">
    update user_account_entity
    <set>
      <if test="dateCreated != null">
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        sort_priority = #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="accountOpenCode != null">
        account_open_code = #{accountOpenCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="failureCount != null">
        failure_count = #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="failureTime != null">
        failure_time = #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sfos.oauth.model.UserAccountEntity">
    update user_account_entity
    set date_created = #{dateCreated,jdbcType=TIMESTAMP},
      last_modified = #{lastModified,jdbcType=TIMESTAMP},
      record_status = #{recordStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort_priority = #{sortPriority,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      account_open_code = #{accountOpenCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      city = #{city,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      failure_count = #{failureCount,jdbcType=INTEGER},
      failure_time = #{failureTime,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.sfos.oauth.model.UserAccountEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="last_modified" jdbcType="TIMESTAMP" property="lastModified" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sort_priority" jdbcType="INTEGER" property="sortPriority" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="account_open_code" jdbcType="VARCHAR" property="accountOpenCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="failure_count" jdbcType="INTEGER" property="failureCount" />
    <result column="failure_time" jdbcType="TIMESTAMP" property="failureTime" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Base_Column_List">
    id, date_created, last_modified, record_status, remarks, sort_priority, version, 
    account_open_code, address, avatar_url, birthday, city, email, failure_count, failure_time, 
    gender, mobile, nick_name, password, province, username
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sfos.oauth.model.UserAccountEntity">
    insert into user_account_entity (id, date_created, last_modified, 
      record_status, remarks, sort_priority, 
      version, account_open_code, address, 
      avatar_url, birthday, city, 
      email, failure_count, failure_time, 
      gender, mobile, nick_name, 
      password, province, username
      )
    values (#{id,jdbcType=BIGINT}, #{dateCreated,jdbcType=TIMESTAMP}, #{lastModified,jdbcType=TIMESTAMP}, 
      #{recordStatus,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{sortPriority,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{accountOpenCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{city,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{failureCount,jdbcType=INTEGER}, #{failureTime,jdbcType=TIMESTAMP}, 
      #{gender,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sfos.oauth.model.UserAccountEntity">
    insert into user_account_entity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sortPriority != null">
        sort_priority,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="accountOpenCode != null">
        account_open_code,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="failureCount != null">
        failure_count,
      </if>
      <if test="failureTime != null">
        failure_time,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="accountOpenCode != null">
        #{accountOpenCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="failureCount != null">
        #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="failureTime != null">
        #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sfos.oauth.model.UserAccountEntity">
    update user_account_entity
    <set>
      <if test="dateCreated != null">
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        sort_priority = #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="accountOpenCode != null">
        account_open_code = #{accountOpenCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="failureCount != null">
        failure_count = #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="failureTime != null">
        failure_time = #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sfos.oauth.model.UserAccountEntity">
    update user_account_entity
    set date_created = #{dateCreated,jdbcType=TIMESTAMP},
      last_modified = #{lastModified,jdbcType=TIMESTAMP},
      record_status = #{recordStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort_priority = #{sortPriority,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      account_open_code = #{accountOpenCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      city = #{city,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      failure_count = #{failureCount,jdbcType=INTEGER},
      failure_time = #{failureTime,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.sfos.auth.model.UserAccountEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="last_modified" jdbcType="TIMESTAMP" property="lastModified" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sort_priority" jdbcType="INTEGER" property="sortPriority" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="account_open_code" jdbcType="VARCHAR" property="accountOpenCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="failure_count" jdbcType="INTEGER" property="failureCount" />
    <result column="failure_time" jdbcType="TIMESTAMP" property="failureTime" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Base_Column_List">
    id, date_created, last_modified, record_status, remarks, sort_priority, version, 
    account_open_code, address, avatar_url, birthday, city, email, failure_count, failure_time, 
    gender, mobile, nick_name, password, province, username
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sfos.auth.model.UserAccountEntity">
    insert into user_account_entity (id, date_created, last_modified, 
      record_status, remarks, sort_priority, 
      version, account_open_code, address, 
      avatar_url, birthday, city, 
      email, failure_count, failure_time, 
      gender, mobile, nick_name, 
      password, province, username
      )
    values (#{id,jdbcType=BIGINT}, #{dateCreated,jdbcType=TIMESTAMP}, #{lastModified,jdbcType=TIMESTAMP}, 
      #{recordStatus,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{sortPriority,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{accountOpenCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{city,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{failureCount,jdbcType=INTEGER}, #{failureTime,jdbcType=TIMESTAMP}, 
      #{gender,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sfos.auth.model.UserAccountEntity">
    insert into user_account_entity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="recordStatus != null">
        record_status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sortPriority != null">
        sort_priority,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="accountOpenCode != null">
        account_open_code,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="failureCount != null">
        failure_count,
      </if>
      <if test="failureTime != null">
        failure_time,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="accountOpenCode != null">
        #{accountOpenCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="failureCount != null">
        #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="failureTime != null">
        #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sfos.auth.model.UserAccountEntity">
    update user_account_entity
    <set>
      <if test="dateCreated != null">
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        sort_priority = #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="accountOpenCode != null">
        account_open_code = #{accountOpenCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="failureCount != null">
        failure_count = #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="failureTime != null">
        failure_time = #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sfos.auth.model.UserAccountEntity">
    update user_account_entity
    set date_created = #{dateCreated,jdbcType=TIMESTAMP},
      last_modified = #{lastModified,jdbcType=TIMESTAMP},
      record_status = #{recordStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort_priority = #{sortPriority,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      account_open_code = #{accountOpenCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      city = #{city,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      failure_count = #{failureCount,jdbcType=INTEGER},
      failure_time = #{failureTime,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>